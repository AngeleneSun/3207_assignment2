##Where use the file "data2" here.
data2 %>% group_by(Study) %>%
summarise(climatenum = length(unique(Climate..FishBase.)), speciesnum = length(unique(Species)), life.stagenum = length(unique(Life.stage)),stimulusnum= length(unique(Cue.stimulus.type))) %>%
pivot_longer(cols = -1,names_to = "d", values_to = "value") %>%
ggplot(aes(x = value)) + geom_histogram(binwidth = 1) + geom_text(aes(label=as.character(..count..)),stat="bin",binwidth=1,vjust=-0.5) +  facet_wrap(~d,scale = "free",nrow = 1) + ggtitle("different experimental designs' compositions")
##Here we see how do these studies allocate their materials number and methods.These fishes almost live in the same climate condition(except one different) and the same life stage, so the two aspects didn't influence most because almost the same. And we speculate that the variance of each studies is caused by the species and stimulus methods.
##Thus we use the same way to count the life stages of each species, stimulus types,studies amounts.
data2 %>% group_by(Species) %>%
summarise(studynum = length(unique(Study)), life.stagenum = length(unique(Life.stage)),stimulusnum= length(unique(Cue.stimulus.type))) %>%
pivot_longer(cols = -1,names_to = "d", values_to = "value") %>%
ggplot(aes(x = value)) + geom_histogram(binwidth = 1) + geom_text(aes(label=as.character(..count..)),stat="bin",binwidth=1,vjust=-0.5) +  facet_wrap(~d,scale = "free") + ggtitle("different species' stimulus method compositions and experiment times")
##In the plot, the studies mainly focused on a life stage in these species, more than half of the total species are all in a study and seldom does the studies use the same species, near to half of the species are under the stimulus where more than 2 types in all experiments.
##In order to know whether the difference are randomly caused by each factor effects and whether the factor's lnRR fits the normal distribution.
# Using QQ plot to show different types of effect, aiming to reflect the total distribution differences by normal distribution.
data2 %>% ggplot(aes(sample = lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~Effect.type,scale = "free") +  ggtitle ("different study effect types's lnRR distribution showed by QQ plot")
##We could see the QQ plots are definitely not normal distribution and lots of extreme values, but nearly according to a point on the axis x equals 0 presents a central symmetry, because we don't know how the method used to calculate the value and also the effect.type could have different functions to diff species.
##Based on last finding, we are going to calculate the all factors' lnRR.
alldis <- function(data,factors){
allplot <- tibble()
for (i in factors){
group <- ensym(i)
alldata <- data %>% group_by({{group}}) %>% summarise(mean_lnRR = mean(lnRR)) %>% select(mean_lnRR) %>% mutate(fa = as.character(i))
allplot <- rbind(alldata,allplot)
}
allplot %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~fa,scale = "free") + ylab("lnRR mean") + ggtitle( "lnRR mean of all factors in experiment by QQ plot")
}
alldis(data2,c("Species","Study","Climate..FishBase.","Cue.stimulus.type","Year..online.","Authors"))
##In this figure, only the effect of Cue.stimulus.type is a normal distribution, others are big deviation.
###Hence, based on all the factors, the main random effect could be "Study". A model of meta-analysis could be made by 1) the diff variance in diff groups caused by "Cue.stimulus.type" as diff cues in studies(when a species in a position may have diff stimulus/cues with other species in the system) ,and 2)other variances lead by diff situations like species and experiment settings.
data3 <- data2 %>% group_by(Study) %>% mutate(cal = 1:n()) %>% ungroup()##Here I use cal to calculate the amount of each studies.
#The meta-analytic model in multi-level
Model <- metafor::rma.mv(yi=lnRR~1, V = VRR, data = data3, method = "REML", random = list(~1|Study, ~1|Species, ~1|cal),dfs = "contain", test = "t")##Cannot have "Cue.stimulus.type" here because it has NA values.
print(Model)
##We can see from above that the model estimates an overall meta-analytic mean as 0.516 with a 95% confidence interval of 0.1957 to 0.8368. In other words, for each variation by an average of 0.516.But in this condition, The p-value is 0.0023 less than 0.05 and the difference by using species, experimental methods and variables between diff experiments is large still should be considered.
##When turning lnRR to RR(respone ratio)
p_MLMA <- predict(Model, transf = exp)
p_MLMA
##and measuring of heterogeneity in effect size estimates across studies I^2(square):
#For calculating I^2:
library(orchaRd)
I2_vals <- orchaRd::i2_ml(Model)
I2 <- tibble(type = firstup(gsub("I2_", "", names(I2_vals))), I2 = round(I2_vals,4))
flextable(I2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
##Using a orchard plot for the multi-level meta-analysis.
orchaRd::orchard_plot(Model, mod = "1", group = "Study", data = data3,
xlab = "all studies' lnRR", angle = 45)##Some points still have extreme values and where the sampling size is extremely big for some experiments.The outcome is related with Model we did before(meta-analytic mean as 0.516 with a 95% confidence interval of 0.1957 to 0.8368).
##Overall compared analysis of external factors like climate and methods.
#Firstly, explore how does external factors like climate effect lnRR changing. There is no doubt that different regions under different temperature conditions have different influences on the content of CO2 in seawater, so the degree of acidification of seawater under different temperature conditions will be different.
##Remove some without habitat points
climate <- data3 %>% filter(Climate..FishBase. != "Not provided")
MLMR <- metafor::rma.mv(lnRR ~ Climate..FishBase.-1, V = VRR, method = "REML",
random = list(~1|Species, ~1|Study/cal),
dfs = "contain", test = "t", data = climate)
MLMR##From the table results, we could realize that the mean lnRR varies largely in different habitats, such as: From the highest in deep water is 0.51, to the lowest in subtropic water is -0.174, no matter how the p-value is although all is above 0.14. That is to say that" In different places, there has a different effect adaptations of OA.
##Orchard plot for diff habitats!
orchaRd::orchard_plot(MLMR, mod = "Climate..FishBase.", group = "Study", data = climate,
xlab = "lnRR in diff habitats", angle = 45)##It can seen that except deep water and trop water, all the habitats have the mean lnRR nearly 0. Why it will deviate, it's because of the experiment has a large sampling size or it has some extreme points.
##Secondly, let's figure out how does the influence of OA differs to diff life stage! Using the same methods.
##Remove some without stage points
stage <- data3 %>% filter(Life.stage != "Not provided")
MLMR_1 <- metafor::rma.mv(lnRR ~ Life.stage-1, V = VRR, method = "REML",
random = list(~1|Species, ~1|Study/cal),
dfs = "contain", test = "t", data = stage)
MLMR_1##From the table results, we could realize that the mean lnRR varies largely in different life stages, such as: only larvae has the largest postive mean lnRR, but adult and juvenile both negative reflected in effect size. That is to say that" In different life stages, there has a different effect adaptations of OA.
##Orchard plot for diff life stages!
orchaRd::orchard_plot(MLMR_1, mod = "Life.stage", group = "Study", data = stage,
xlab = "lnRR in diff life stages", angle = 45)##Where the larvae stage have the precise and accurate studies than the two stages maybe because of the positive effect size.
##Thirdly, let's combine life stage and climate together what we found before.
##Remove some points
cs <- data3 %>% filter(Life.stage!= "Not provided" & Climate..FishBase. != "Not provided")
MLMR_2 <- metafor::rma.mv(lnRR ~ Life.stage + Climate..FishBase.-1, V = VRR, method = "REML",
random = list(~1|Species, ~1|Study/cal),
dfs = "contain", test = "t", data = cs)
MLMR_2##From the table results, we could realize that the mean lnRR varies largely in different life stages, such as: only larvae has the largest postive mean lnRR, but adult and juvenile both negative reflected in effect size. That is to say that" In different life stages, there has a different effect adaptations of OA.
##Orchard plot for diff life stages!
orchaRd::orchard_plot(MLMR_1, mod = "Life.stage", group = "Study", data = stage,
xlab = "lnRR in diff life stages", angle = 45)##Where the larvae stage have the precise and accurate studies than the two stages maybe because of the positive effect size.
##Let see the three types of methods how to show on VRR.
V <- as.data.frame(orchaRd::r2_ml(MLMR))
V <- cbind(V,as.data.frame(orchaRd::r2_ml(MLMR_1)))
V <- cbind(V,as.data.frame(orchaRd::r2_ml(MLMR_2)))
colnames(V) <- c("climate","life stage","climate + life stage")
knitr::kable(V,caption = "Variance varied by different meta-analysis models in publication bias")
##Here is to proved our prediction, by using two variables together could better illustrate the variance in diff experiments. And the constant variance could only larger slightly than 0.02,because in diff experiments, it varies a lot.
##In order to observe clearer we need to group the data by precision(1/sqrt(VRR)), then shows the influence of precision (1/√lnRR) on effect size.
#Divide the samples into diff groups by precision measuring.
data4 <- data3 %>% mutate(precision = 1/sqrt(VRR)) %>%  mutate(
prec = case_when(
precision < 5 ~ "low",
precision >= 5 & precision < 50 ~ "normal",
precision >= 50 & precision < 500 ~ "exact",
precision >= 500 ~ "overexact",
)) %>% mutate(prec = fct_relevel(as.factor(prec),"low","normal","exact"))
data4 %>% ggplot(aes(y = precision, x = lnRR)) + geom_point() + facet_wrap(~prec, scale = "free") + ggtitle("diff groups'precision doing with lnRR ") + xlab("lnRR") + ylab("precision(1/sqrt(lnRR))")##Among them, there are some very accurate experiments with very small variances and very large effect sizes in ocean acidification studies. In other groups in other graphs, the lnRR values are more dispersed, but the lnRR values tend to converge as the accuracy increases.
##To get the diff groups' sample size proportion in the total sample.
precnum <- data4 %>% count(across(prec)) %>% mutate(ratio = round(n/nrow(data4),3))
knitr::kable(precnum,caption = "diff groups' sample size proportion and numbers with the level of precisions")
##Where the exact and overexact groups only contains for 0.032%, so it has very slightly influence to the whole population even we could remove them.
##Using funnel plots to test the study publication bias.
metafor::funnel(x = data4$lnRR, vi = data4$VRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("red", "blue", "green"),ylim = c(0.01,30),xlim = c(-3,3),
las = 1, xlab = "Response ratio (RR)", atransf = exp, legend = TRUE, pch =10)## Where shows that almost no bias in the places have higher precision because the error is low. But when the RR close to x=1.00, it will have some bias, which means that low-precise studies is related to the result with larger effect size(more obvious visually).
##Let's check whether effect size of OA will influence by the year.online by using time-lag plot.
ggplot(data4, aes(y = lnRR, x = Year..online., size = 1/sqrt(VRR))) + geom_point(alpha = 0.8) +geom_smooth(method = lm, color = "pink", show.legend = FALSE) + labs(x = "The year of publishing",
y = "lnRR", size = "Precision (1/SE)") +
geom_hline(yintercept = 0,col = "orange", linetype = 2)+
theme_light() + ggtitle("The change of effect size as time passed")
##It could be seen in this time-lag plot, when the publishing time is increasing, the effect size(lnRR) shows a decrease trend while approach slowly to 0 in 2020. To some extent, the reduction in the effect size over the study years suggests that the damage from ocean acidification was reduced and remedied.
## Below, by using the year as a fixed effect in meta-analysis model!
data5 <- data4 %>% mutate(newyear = Year..online. - mean(Year..online.))
fixyear <- metafor::rma.mv(lnRR ~ newyear, V = VRR, random = list(~1 | Study/cal),test = "t", dfs = "contain", data = data5)
fixyear
##Thus, the time changing shows a clear impact on the effect size(lnRR), with -0.115 as the rate of change, it gradually decreases on average over the years (-0.115 as the slope). The 95% confidence interval ranges from -0.203 to -0.028, and the average effect value (lnRR) after ignoring the year effect is above 0.1446.
##Now, inverse sampling variance (i.e., 1vlnRR) is considered as a new meta-regression model to measure bias. In order to make the data more centralized, "exact+overexact (before)" is used as the large value of deviation, and 97% is used as the index to separate the data.
isv <- metafor::rma.mv(lnRR ~ inverse_VRR, V = VRR, random = list(~1 | Study/cal),
test = "t", dfs = "contain", data = data5 %>% mutate(inverse_VRR = 1/VRR) %>% filter(inverse_VRR <= quantile(inverse_VRR, 0.97)))
isv
##As can be seen from the figure below, the effect of inverse sampling variance (i.e., 1vlnRR) on the lnRR effect is well reflected, when 1vlnRR becomes a fixed effect. Since p-value is 0.02 less than 0.05, our verification is satisfied with a slope of -0.001 and a 95% confidence interval of [-0.001, 0].
##Here we combine the influence of year and precision of studies together as a fixed effect to meta-analysis model. For avoiding some extreme values, we use 99% for seperating it.
pub <- metafor::rma.mv(lnRR ~ newyear + precision, V = VRR, random = list(~1 | Study/cal),
test = "t", dfs = "contain", data = data5 %>% filter(precision < quantile(data5$precision,0.99)))
pub
##From this combined meta-analysis, we can see that the effects of both time and precision can be regarded as clearly fixed effects. Because the slope of year is -0.124 (95% confidence interval: [-0.215, -0.033]) and the slope of accuracy is -0.022 (95% confidence interval: [-0.037, -0.007]). The mean lnRR effect value was 0.365 (95% confidence interval: [0.078, 0.652]) when the fixed effects of year and precision were ignored. From the lnRR here, we can see that the effect value itself gradually decreases with the progress of the research, because the initial effect value is too large, which may be caused by the excessive study effect. Subsequent studies gradually reduce its influence and have a clear difference from the original large lnRR, which makes scholars in the field of research thinking about the normal effect does OA to fish species.
##The variance showed by diff pub-bias meta-analysis model.
table <- as.data.frame(orchaRd::r2_ml(isv))
table <- cbind(table,as.data.frame(orchaRd::r2_ml(fixyear)))
table <- cbind(table,as.data.frame(orchaRd::r2_ml(pub)))
colnames(table) <- c("precision","year","year+precision")
knitr::kable(table, caption = "variance showed by diff pub-bias meta-analysis model")##Here the VRR of effect size is larger than the climate one we did before,as the two combined year and precision is about 3.74829% as composition of variance, which shows using the two aspects together could explain the difference in studies better than other conditions.
##Now, let's see whether IF(influence factor) as a contributor will influence the publication bias.
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 <- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
##Now, let's see whether IF(influence factor) as a contributor will influence the publication bias.
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 <- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100)
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100)])
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100))]
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100))]
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100))]
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100))]
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100))]
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100))]
##Now, let's see whether IF(influence factor) as a contributor will influence the publication bias.
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100))]
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100), all.inside = T)])
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100), all.inside = T)])
data6 <- data6 %>% mutate(if_range =c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data5$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100), all.inside = T)])
study_info <- data5 %>% group_by(Study) mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
study_info <- data5 %>% group_by(Study) mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
study_info <- data5 %>% group_by(Study) mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
study_info <- data5 %>% group_by(Study) mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num=length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
study_info <- data5 %>% group_by(Study) mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num=length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
study_info <- data5 %>% group_by(Study) mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num=length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
study_info <- data5 %>% group_by(Study) mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num=length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6<- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
data6<- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 %>% drop_na() %>% ggplot(aes(x= if_range,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6<- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%"))
data6<- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)]))
data6<- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
data6<- data6 %>% mutate(if_range = c("0-0.2","0.2-0.4","0.4-0.6%","0.6-0.8","0.8-1.0")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
data6<- data6 %>% mutate(if_range = c("0-0.2","0.2-0.4","0.4-0.6","0.6-0.8","0.8-1.0")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
data6 %>% drop_na() %>% ggplot(aes(x= if_range,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6<- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%"))
data6<- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
data6<- data6 %>% mutate_if(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6<- data6 %>% mutate_if(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
data6<- data6 %>% mutate_if(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
data6 %>% drop_na() %>% ggplot(aes(x= if_range,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6<- data6 %>% mutate_if(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)] )
data6 %>% drop_na() %>% ggplot(aes(x= c("0-20%","20-40%","40-60%","60-80%","80-100%"),fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6 %>% drop_na() %>% ggplot(aes(x= c("0-20%","20-40%","40-60%","60-80%","80-100%"),fill=Effect.type))
data6 %>% drop_na() %>% ggplot(aes(x= c("0-20%","20-40%","40-60%","60-80%","80-100%"),fill=Effect.type))
data6<- data6 %>% mutate(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6<- data6 %>% mutate(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6<- quantile(data6$Pub.year.IF, probs = seq(0,1,1/5))
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6<- data6 %>%mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
data6<- mutate(data6,if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
data6<- mutate(data6,findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T))
data6 %>% drop_na() %>% ggplot(aes(x= 0-1 ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 %>% drop_na() %>% ggplot(aes(x= if_range,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6 %>% drop_na() %>% ggplot(aes(x= c("0-20%","20-40%","40-60%","60-80%","80-100%"),fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1)
findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1)
data6<- data6 %>% mutate(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6<- data6 %>% mutate(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)])
data6<- data6 %>% mutate(range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)])
data6<- data6 %>% mutate(range = c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)])
data6<- data6 %>% mutate(range = c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)])
data6 %>% drop_na() %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)] ) %>%ggplot(aes(x= ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6 %>% drop_na() %>%  mutate(range = c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)]) %>%ggplot(aes(x= ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
quant <- data.frame(
ID=data6$Pub.year.IF,
value=apply(data6[,-1],1,quantile,0.75)
)
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 %>% drop_na()%>% ggplot(aes(x= 0-100% ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6 %>% drop_na()%>% ggplot(aes(x= 0-100% ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6 %>% drop_na()%>% ggplot(aes(x= 0-100%,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Distribution of effect types studied on different IF intervals") + xlab("IF quantile")
data6 %>% drop_na()%>% ggplot(aes(x= 0-100,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 %>% data6 %>%  mutate(range = c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)])
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
data6 <- data6 %>%  mutate(range = c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)])
data6 <- mutate(range = c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)])
data6 <- findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),1),all.inside = T)
range <- c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%")
data6 %>% drop_na()%>% ggplot(aes(x= range,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6$Pub.year.IF
max(range = c("0%-20%","20%-40%","40%-60%","60%-80%","80%-100%"))
data6$Pub.year.IF
max(data6$Pub.year.IF)
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
View(data6)
levels(data6$Pub.year.IF)[levels(data6$Pub.year.IF) <= 5.00] <- "low"
levels(data6$Pub.year.IF)[levels(5.00 <= data6$Pub.year.IF) <= 10.00] <- "medium"
levels(data6$Pub.year.IF)[levels(data6$Pub.year.IF) <= 5.00] <- "low"
levels(data6$Pub.year.IF)[levels(5.00 <= data6$Pub.year.IF) <= 10.00] <- "medium"
levels(data6$Pub.year.IF)[levels(data6$Pub.year.IF) >= 10.00] <- "high"
View(data6)
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= levels(Pub.year.IF),fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= level(Pub.year.IF),fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
levels(data6$Pub.year.IF)
"high" <- data6$Pub.year.IF >= 10.00
"medium" <- 5.00 <= data6$Pub.year.IF <= 10.00
"medium" <- data6$Pub.year.IF <= 10.00
"low" <- data6$Pub.year.IF <= 5.00
"medium" <- data6$Pub.year.IF <= 10.00
"high" <- data6$Pub.year.IF >= 10.00
num("low")
## See how does Effect.type do with study "IF"
##Draw a barplot to see the potential of acceptance in journals.
data6$Pub.year.IF <- as.factor(data6$Pub.year.IF)
"low" <- data6$Pub.year.IF <= 5.00
"medium" <- data6$Pub.year.IF <= 10.00
"high" <- data6$Pub.year.IF >= 10.00
"low" <- [0.00,5.00]
"medium" <- data6$Pub.year.IF(5.00:10.00)
data6 %>% drop_na()%>% ggplot(aes(x= c("low" =c(0:5.00),"medium"= c(5.00:10:00), "high"= c(10.00:70.00)) Pub.year.IF,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
ggplot(aes(x= Pub.year.IF,c("low" =c(0:5.00),"medium"= c(5.00:10:00), "high"= c(10.00:70.00)) ,fill=Effect.type))
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF,c("low" =c(0:5.00),"medium"= c(5.00:10:00), "high"= c(10.00:70.00)) ,fill=Effect.type))
x1 <- factor(data6$Pub.year.IF, c("low" =c(0:5.00),"medium"= c(5.00:10:00), "high"= c(10.00:70.00)))
c("low" =c(0:5.00),"medium"= c(5.00:10:00), "high"= c(10.00:70.00)
x1 <- factor(data6$Pub.year.IF, c("low" =(0:5.00),"medium"= (5.00:10:00), "high"= (10.00:70.00)))
##Now, let's see whether IF(influence factor) as a contributor will influence the publication bias.
data6 <- data5 %>% group_by(Study) %>% mutate(mean_VRR = mean(VRR), sp.num = length(unique(Species)), mean_lnRR = mean(lnRR), cue.num = length(unique(Cue.stimulus.type))) %>% ungroup() %>%  select(Study,Year..online., Pub.year.IF,mean_VRR, Effect.type, Average.n, sp.num, cue.num,mean_lnRR) %>% distinct()
## See how does Effect.type do with study "IF"
##Draw a barplot to see the potential of acceptance in journals.
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
##Where is clear to see that the study with strong effect types tends to be accepted by high IF journals, and no effect type studies could only published in the same low IF journals. So we could infer that the journal has the bias on effect type to decide whether accept one study.
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_line(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_histogram(aes(color=Effect.type), position = "fill")+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_x_continuous(
breaks = c(5, 10, 70),
label = c("low", "medium", "high") + scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
ata6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_x_continuous(breaks = c(5, 10, 70),label = c("low", "medium", "high") + scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_x_continuous(breaks = c(5, 10, 70),label = c("low", "medium", "high")) + scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+scale_x_discrete(breaks = c(5, 10, 70),label = c("low", "medium", "high")) + scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_point(aes(color=Effect.type), position = "fill")+ scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_point(aes(color=Effect.type), position = "fill")+ scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_point(), position = "fill")+ scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill")+ scale_x_continous(breaks = seq(0, 70, 23)) +scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_point(size=2)+ +scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_point(size=2)+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF,fill=Effect.type)) + geom_point(size=2)+scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill") +scale_y_continuous(labels = scales::percent) + ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill") +scale_y_continuous(labels = scales::percent) +theme_light()+ ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill", alpha=0.3) +scale_y_continuous(labels = scales::percent) +theme_light()+ ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
##Where is clear to see tha
p_load(mass)
data6 %>% drop_na()%>% ggplot(aes(x= Pub.year.IF, ,fill=Effect.type)) + geom_bar(aes(color=Effect.type), position = "fill", alpha=0.3) +scale_y_continuous(labels = scales::percent) +theme_light()+ ggtitle("Acceptance distribution of diff effect types in diff IF journals") + xlab("IF")
##Where is clear to see that the study with strong effect types tends to be accepted by high IF journals, and no effect type studies could only published in the same low IF journals. So we could infer that the journal has the bias on effect type to decide whether accept one study.
if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,Average.n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 3) +  plot_annotation(
title = "Distribution of other research characteristics in different IF intervals") + ylab("IF quantile")
data6 %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,Average.n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot()
data6 %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,Average.n,precision),names_to = "trait", values_to = "value")
if_range <- c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,Average.n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 3) +  plot_annotation(
title = "Distribution of other research characteristics in different IF intervals") + ylab("IF quantile")
knitr::opts_chunk$set(echo = TRUE, cache = FALSE, tidy = TRUE)
options(digits=2)
# Load packages
pacman::p_load(metafor, flextable, tidyverse, orchaRd, pander, mathjaxr, equatags, vembedr, tidyverse)
# To use mathjaxr you need to run equatags::mathjax_install()
# Packages
pacman::p_load(tidyverse, metafor, orchaRd)
# Download the data. Exclude NA in r and sample size columns
arnold_data <- read_csv("https://raw.githubusercontent.com/pieterarnold/fitness-rmr-meta/main/MR_Fitness_Data_revised.csv")
# Exclude some NA's in sample size and r
# Calculate the effect size, ZCOR
arnold_data <- metafor::escalc(measure = "ZCOR", ri = r, ni = n.rep, data = arnold_data, var.names = c("Zr", "Zr_v")) #"ADD YOUR CODE HERE"
# Lets subset to endotherms
arnold_data_endo <- arnold_data %>%
mutate(endos = ifelse(Class %in% c("Mammalia", "Aves"), "endo", "ecto")) %>%
filter(endos == "endo" & Zr <= 3) # Note that one sample that was an extreme outlier was removed in the paper.
# Add in observation-level (residual) column. This column simply counts, from 1 to the number of rows
arnold_data_endo$residual <- 1:dim(arnold_data_endo)[1] #"ADD YOUR CODE HERE"
# Lets make a funnel plot to visualize the data in relation to the precision, inverse sampling standard error,
metafor::funnel(x = arnold_data_endo$Zr, vi = arnold_data_endo$Zr_v,
yaxis = "seinv", digits = 2,
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "Correlation Coefficient (r)", atransf=tanh, legend = TRUE)
ggplot(arnold_data_endo, aes(y = 1/sqrt(Zr_v), x = tanh(Zr))) +
geom_point() + geom_vline(aes(xintercept = 0)) + labs(y = "Precision (1/SE)", x = "Correlation Coefficient (r)") +
theme_bw()
ggplot(arnold_data_endo, aes(y = Zr, x = Zr_v)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "Fisher's Z-transformed Correlation Coefficient (Zr)", x = "Sampling Variance of Zr") +
theme_classic()
# Including sampling variance as moderator
metareg_v <- rma.mv(Zr ~ Zr_v, V = Zr_v,
random = list(~1|Ref,
~1|residual),
test = "t", dfs = "contain",
data = arnold_data_endo)
summary(metareg_v)
# How much variation does this model explain in Zr?
r2 <- orchaRd::r2_ml(metareg_v)
r2
ggplot(arnold_data_endo, aes(y = Zr, x = Year, size = 1/sqrt(Zr_v))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Fisher's Z-transformed Correlation Coefficient (Zr)", size = "Precision (1/SE)") + theme_classic()
# Including sampling variance as moderator
metareg_time <- rma.mv(Zr ~ Year, V = Zr_v,
random = list(~1|Ref,
~1|residual),
test = "t", dfs = "contain",
data = arnold_data_endo)
summary(metareg_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(metareg_time) #"ADD YOUR CODE HERE"
r2_time
# Including sampling variance and year as moderators to account for both!
metareg_time <- rma.mv(Zr ~ Year + Zr_v, V = Zr_v,
random = list(~1|Ref,
~1|residual),
test = "t", dfs = "contain",
data = arnold_data_endo)
summary(metareg_time)
# How much variation does time when results were published explain in Zr?
r2_time_sv <- orchaRd::r2_ml(metareg_time) #"ADD YOUR CODE HERE"
r2_time_sv
arnold_data_endo <- arnold_data_endo %>% mutate(Year_c = Year - mean(Year)) # 'ADD YOUR CODE HERE'
# Including sampling variance and mean centered year as moderators to account for both!
metareg_time_c <- rma.mv(Zr ~ Year_c + Zr_v, V = Zr_v,
random = list(~1|Ref,
~1|residual),
test = "t", dfs = "contain",
data = arnold_data_endo)
summary(metareg_time_c) # 'ADD YOUR CODE HERE'
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, cache = FALSE, tidy = TRUE)
options(digits=3)
# Chunk 2: loadpacks
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
#install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, devtools, tidyverse, ggforce, GGally, flextable, latex2exp, png, magick, metafor, MASS, emmeans, R.rsp) # basically just list all the packages you want here
# Install the orchaRd package
devtools::install_github("daniel1noble/orchaRd", force = TRUE)
# Chunk 3
# Lets set up the simulated experiment. We'll conduct 10000 simulations, or experiments, where we sample 20 individuals from a population and measure 2 traits on those individuals that have a correlation of 0.70.
nsim = 10000
n = 20
r = 0.70
covMatrix = matrix(c(1, r, r, 1), nrow = 2, ncol = 2)
# Create an empty vector to store our simulated Zr values.
Zr <- c()
# Run our simulation. Here, we need to estimate the correlation between two randomly drawn traits, convert this to Zr and store it.
for(i in 1:nsim){
# This code will simulate two variables by sampling them from a multivariate normal distribution (mvnorm). mvnorm requires the sample size (number of rows in the data frame), the mean of the two variables, in this case they are centered on 0 for simplicity, and the covariance matrix (which here is just the correlation matrix as the variables will be standardized)
sim_r <- MASS::mvrnorm(n = n, mu = c(0,0), Sigma = covMatrix)
# From the data frame sim_r we now want to calculate the correlation
cor <- cor(sim_r)[1,2] #"ADD YOUR CODE HERE"
# Now, we want to convert this correlation value to Zr
Zr_tmp <- 0.5*log((1 + cor) / (1 - cor)) # "ADD YOUR CODE HERE"
# Finally, we'll merge the empty Zr vector with the value of Zr_tmp.
Zr <- c(Zr, Zr_tmp)
}
# Chunk 4: sampldistZr
#"ADD YOUR CODE HERE"
# Now lets plot the sampling distribution.
ggplot2::ggplot(tibble(Zr), aes(x = Zr)) +
geom_histogram(binwidth = 0.02) +
geom_vline(xintercept = 0.5*log((1 + r) / (1 - r)), col = "red") +                     # Add the true mean in red
geom_vline(xintercept = mean(Zr), col = "blue", linetype = 2) + # Add the mean of the means
labs(x = "Z-transformed Correlation Coefficient (Zr)")
# Chunk 5
# We know the 'true' values so we can use them to calculate what the sampling variance for this specific situation should be.
sv_Zr <- 1 / (n - 3) #"ADD YOUR CODE HERE"
# We just did a simple simulation of the situation where we only calculate the effect size statistic, now lets see what the sampling variance is of the Zr sampling distribution that we calculated.
samp_dist_Zr <- var(Zr) #"ADD YOUR CODE HERE"
# Let's create a table to contrast these a little more clearly
tab <- data.frame(Approach = c("Analytical", "Simulation"), `Sampling Variance` = c(sv_Zr,samp_dist_Zr), check.names = FALSE)
flextable(tab)
# Chunk 6: datadownload
# Download and clean data
zr_data <- read.csv("https://raw.githubusercontent.com/daniel1noble/meta-workshop/gh-pages/data/ind_disp_raw_data.csv") %>%
dplyr::select(study_ID, taxa, species, trait, response, response_unit, disp_trait, disp_unit, corr_coeff, sample_size) %>% mutate(residual = 1:n()) # Add this observation level variable. We'll explain later what it means.
# Chunk 7
#"ADD YOUR CODE HERE"
# There's a bunch of free stuff they can do here.
#Studies / taxa
std_taxa <- zr_data %>% group_by(taxa) %>% summarise(stdy = length(unique(study_ID)), effects = n())
std_taxa %>% ggplot(aes(x = taxa, y = stdy)) +
geom_point(size = 6, aes(colour = effects)) +
labs(y = "Number of Studies", x = "Taxonomic Group", colour = "# Effects") +
theme_bw()
ggpairs(zr_data, columns = c(2,9:10), aes(colour=disp_trait),
columnLabels = c("Taxa", "Correlation (r)", "Sample size (n)"))
# Chunk 8
# Calculate Fisher's r-to-z transformed correlation coefficient (ZCOR) as yi = effect size and vi = sampling variances, where ri = raw correlation coefficients, and ni = sample size.
zr_data %>% slice_head(n = 5)
# Chunk 9
# We can easily convert back to r as follows
zr_data$r <- tanh(zr_data$Zr)
ggpairs(data6,x=Pub.year.IF)
## See how does Effect.type do with study "IF"
##Draw a barplot to see the potential of acceptance in journals.
ggpairs(data6$Pub.year.IF)
## See how does Effect.type do with study "IF"
##Draw a barplot to see the potential of acceptance in journals.
ggpairs(data6,Pub.year.IF)
ggpairs(data6,Pub.year.IF)
data6 <- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")
data6 %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,Average.n,precision),names_to = "trait", values_to = "value") %>%
data6 <- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%"))
data6 <- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)])
data6 <- data6 %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(data6$Pub.year.IF,c(0,quantile(data6$Pub.year.IF,0.2,T),quantile(data6$Pub.year.IF,0.4,T),quantile(data6$Pub.year.IF,0.6,T),quantile(data6$Pub.year.IF,0.8,T),100),all.inside = T)])
knitr::opts_chunk$set(echo = TRUE)
## Install several packages
library(pacman)
library(orchaRd)
p_load(tidyverse, flextable, janitor, ggpmisc, metafor, patchwork)
## Read the Clark et al. (2020) data (i.e., OA_activitydat_20190302_BIOL3207.csv) and select meaningful columns
ass1_data <- read.csv("C:/Users/26935/OneDrive/桌面/3207 ass2/OA_activitydat_20190302_BIOL3207.csv")%>%
dplyr::select(loc, species, treatment, animal_id, sl, size, activity, comment) %>% mutate(c(residual = 1:n()))
## Do a check of the data by turning variables to factors
ass1_data$loc <- as.factor(ass1_data$loc)
ass1_data$species <- as.factor(ass1_data$species)
ass1_data$size <- as.factor(ass1_data$size)
ass1_data$treatment <- as.factor(ass1_data$treatment)
summary(ass1_data)
###In the summary, we know that "animal_id" and "activity" have the NA values.  However, the data cannot be affected if "animal_id" not exist, so we only consider deleting the NA "activity" values.And also by checking the data, there is no any strange errors like spelling, capital, etc.
### Find where does the NA values distributes and whether have influence on data effect
table(ass1_data[!complete.cases(ass1_data$activity),] %>% select(loc, species))
knitr::opts_chunk$set(echo = TRUE)
## Install several packages
library(pacman)
library(orchaRd)
p_load(tidyverse, flextable, janitor, ggpmisc, metafor, patchwork)
## Read the Clark et al. (2020) data (i.e., OA_activitydat_20190302_BIOL3207.csv) and select meaningful columns
ass1_data <- read.csv("C:/Users/26935/OneDrive/桌面/3207 ass2/OA_activitydat_20190302_BIOL3207.csv")%>%
dplyr::select(loc, species, treatment, animal_id, sl, size, activity, comment) %>% mutate(c(residual = 1:n()))
## Do a check of the data by turning variables to factors
ass1_data$loc <- as.factor(ass1_data$loc)
ass1_data$species <- as.factor(ass1_data$species)
ass1_data$size <- as.factor(ass1_data$size)
ass1_data$treatment <- as.factor(ass1_data$treatment)
summary(ass1_data)
###In the summary, we know that "animal_id" and "activity" have the NA values.  However, the data cannot be affected if "animal_id" not exist, so we only consider deleting the NA "activity" values.And also by checking the data, there is no any strange errors like spelling, capital, etc.
### Find where does the NA values distributes and whether have influence on data effect
table(ass1_data[!complete.cases(ass1_data$activity),] %>% select(loc, species))
## Install several packages
library(pacman)
library(orchaRd)
p_load(tidyverse, flextable, janitor, ggpmisc, metafor, patchwork)
## Read the Clark et al. (2020) data (i.e., OA_activitydat_20190302_BIOL3207.csv) and select meaningful columns
ass1_data <- read.csv("C:/Users/26935/OneDrive/桌面/3207 ass2/OA_activitydat_20190302_BIOL3207.csv")%>%
dplyr::select(loc, species, treatment, animal_id, sl, size, activity, comment) %>% mutate(c(residual = 1:n()))
## Do a check of the data by turning variables to factors
ass1_data$loc <- as.factor(ass1_data$loc)
ass1_data$species <- as.factor(ass1_data$species)
ass1_data$size <- as.factor(ass1_data$size)
ass1_data$treatment <- as.factor(ass1_data$treatment)
summary(ass1_data)
###In the summary, we know that "animal_id" and "activity" have the NA values.  However, the data cannot be affected if "animal_id" not exist, so we only consider deleting the NA "activity" values.And also by checking the data, there is no any strange errors like spelling, capital, etc.
### Find where does the NA values distributes and whether have influence on data effect
table(ass1_data[!complete.cases(ass1_data$activity),] %>% select(loc, species))
table(ass1_data[!complete.cases(ass1_data$activity),] %>% select(loc, species))
ass1_data$loc <- as.factor(ass1_data$loc)
ass1_data$species <- as.factor(ass1_data$species)
ass1_data$size <- as.factor(ass1_data$size)
ass1_data$treatment <- as.factor(ass1_data$treatment)
summary(ass1_data)
###In the summary,
table(ass1_data[!complete.cases(ass1_data$activity),] %>% select(loc, species))
